AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Cryptocurrency Price API
Globals:
  Function:
    Environment:
      Variables:
        ENVIRONMENT:
          Ref: Environment
Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
    - development
    - production
  TableName:
    Type: String
  SesEmail:
    Type: String
Resources:
  CryptoApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: CryptoAPI
      StageName: Prod
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: CryptoAPI
          version: '1.0'
        paths:
          /crypto-price:
            get:
              parameters:
              - name: crypto
                in: query
                required: true
                schema:
                  type: string
              - name: email
                in: query
                required: true
                schema:
                  type: string
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          message:
                            type: string
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCryptoPriceFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /search-history:
            get:
              responses:
                '200':
                  description: 200 response
                  content:
                    application/json:
                      schema:
                        type: object
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetSearchHistoryFunction.Arn}/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: LambdaPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
            Resource:
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Environment}_CryptoPriceSearchHistory
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
  GetCryptoPriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.getCryptoPrice
      Runtime: nodejs20.x
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
          SES_EMAIL:
            Ref: SesEmail
      Events:
        GetCryptoPriceApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: CryptoApi
            Path: /crypto-price
            Method: get
      CodeUri: GetCryptoPriceFunction
    Metadata:
      SamResourceId: GetCryptoPriceFunction
  GetSearchHistoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.getSearchHistory
      Runtime: nodejs20.x
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Events:
        GetSearchHistoryApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: CryptoApi
            Path: /search-history
            Method: get
  CryptoPriceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: TableName
      AttributeDefinitions:
      - AttributeName: searchId
        AttributeType: S
      KeySchema:
      - AttributeName: searchId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
