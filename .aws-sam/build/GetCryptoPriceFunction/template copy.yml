AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Serverless Cryptocurrency Price API

Globals:
  Function:
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - development
      - production

Resources:
  CryptoApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      Name: "CryptoAPI"
      StageName: "Prod"

  # Define the IAM role
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies: 
        - PolicyName: "LambdaPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "dynamodb:Scan"
                  - "dynamodb:PutItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:GetItem"
                Resource: 
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${Environment}_CryptoPriceSearchHistory"
              - Effect: "Allow"
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  GetCryptoPriceFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.getCryptoPrice
      Runtime: nodejs20.x
      Timeout: 290
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Sub "${Environment}_CryptoPriceSearchHistory"
          SES_EMAIL: 'qianxtang@gmail.com'
      Events:
        GetCryptoPriceApi:
          Type: Api
          Properties:
            RestApiId: !Ref CryptoApi
            Path: /crypto-price
            Method: get

  GetSearchHistoryFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.getSearchHistory
      Runtime: nodejs20.x
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Sub "${Environment}_CryptoPriceSearchHistory"
      Events:
        GetSearchHistoryApi:
          Type: Api
          Properties:
            RestApiId: !Ref CryptoApi
            Path: /search-history
            Method: get

  CryptoPriceTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub "${Environment}_CryptoPriceSearchHistory"
      AttributeDefinitions:
        - AttributeName: searchId
          AttributeType: S
      KeySchema:
        - AttributeName: searchId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1